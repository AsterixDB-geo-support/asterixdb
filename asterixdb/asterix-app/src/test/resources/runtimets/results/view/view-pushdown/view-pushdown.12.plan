cardinality: 0.0
cost: 0.0
distribute result [$$94] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    project ([$$94]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
    -- STREAM_PROJECT  |UNPARTITIONED|
      assign [$$94] <- [{"id": $$97, "review": $$101}] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
      -- ASSIGN  |UNPARTITIONED|
        limit 3 [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
        -- STREAM_LIMIT  |UNPARTITIONED|
          exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
          -- SORT_MERGE_EXCHANGE [$$97(ASC) ]  |PARTITIONED|
            limit 3 [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
            -- STREAM_LIMIT  |PARTITIONED|
              project ([$$97, $$101]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
              -- STREAM_PROJECT  |PARTITIONED|
                assign [$$101] <- [$$d.getField(1)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                -- ASSIGN  |PARTITIONED|
                  exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    data-scan []<-[$$97, $$d] <- test.DatasetWithKnownField condition (and(not(is-unknown(int64-default-null($$d.getField("year")))), not(is-unknown(int64-default-null($$d.getField("quarter")))), eq($$d.getField(1), "good"))) limit 3 [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                    -- DATASOURCE_SCAN  |PARTITIONED|
                      exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                        empty-tuple-source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                        -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
