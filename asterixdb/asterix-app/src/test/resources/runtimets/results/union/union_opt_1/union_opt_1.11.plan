distribute result [$$t] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
-- DISTRIBUTE_RESULT  |UNPARTITIONED|
  exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
  -- ONE_TO_ONE_EXCHANGE  |UNPARTITIONED|
    limit 4 [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
    -- STREAM_LIMIT  |UNPARTITIONED|
      exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
      -- RANDOM_MERGE_EXCHANGE  |PARTITIONED|
        union ($$151, $$178, $$t) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
        -- UNION_ALL  |PARTITIONED|
          exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
            union ($$213, $$227, $$151) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
            -- UNION_ALL  |PARTITIONED|
              exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
              -- RANDOM_PARTITION_EXCHANGE  |PARTITIONED|
                project ([$$213]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                -- STREAM_PROJECT  |PARTITIONED|
                  assign [$$213] <- [{"two": $$183}] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                  -- ASSIGN  |PARTITIONED|
                    limit 4 [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                    -- STREAM_LIMIT  |PARTITIONED|
                      project ([$$183]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                      -- STREAM_PROJECT  |PARTITIONED|
                        assign [$$183] <- [$$onek1.getField(2)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                        -- ASSIGN  |PARTITIONED|
                          project ([$$onek1]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                          -- STREAM_PROJECT  |PARTITIONED|
                            exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              data-scan []<-[$$187, $$onek1] <- test.onek1 condition (and(ge($$onek1.getField(2), 1), le($$onek1.getField(2), 10))) limit 4 [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                              -- DATASOURCE_SCAN  |PARTITIONED|
                                exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  empty-tuple-source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                  -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
              exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
              -- RANDOM_PARTITION_EXCHANGE  |PARTITIONED|
                project ([$$227]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                -- STREAM_PROJECT  |PARTITIONED|
                  assign [$$227] <- [{"two": $$184}] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                  -- ASSIGN  |PARTITIONED|
                    limit 4 [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                    -- STREAM_LIMIT  |PARTITIONED|
                      project ([$$184]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                      -- STREAM_PROJECT  |PARTITIONED|
                        assign [$$184] <- [$$onek2.getField(2)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                        -- ASSIGN  |PARTITIONED|
                          project ([$$onek2]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                          -- STREAM_PROJECT  |PARTITIONED|
                            exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              data-scan []<-[$$188, $$onek2] <- test.onek2 condition (and(ge($$onek2.getField(2), 1), le($$onek2.getField(2), 100))) limit 4 [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                              -- DATASOURCE_SCAN  |PARTITIONED|
                                exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  empty-tuple-source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                  -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
          exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
            union ($$345, $$354, $$178) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
            -- UNION_ALL  |PARTITIONED|
              exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
              -- RANDOM_PARTITION_EXCHANGE  |PARTITIONED|
                project ([$$345]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                -- STREAM_PROJECT  |PARTITIONED|
                  assign [$$345] <- [{"two": $$185}] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                  -- ASSIGN  |PARTITIONED|
                    limit 4 [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                    -- STREAM_LIMIT  |PARTITIONED|
                      project ([$$185]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                      -- STREAM_PROJECT  |PARTITIONED|
                        assign [$$185] <- [$$onek1.getField(2)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                        -- ASSIGN  |PARTITIONED|
                          project ([$$onek1]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                          -- STREAM_PROJECT  |PARTITIONED|
                            exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              data-scan []<-[$$189, $$onek1] <- test.onek1 condition (and(ge($$onek1.getField(2), 1), le($$onek1.getField(2), 1000))) limit 4 [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                              -- DATASOURCE_SCAN  |PARTITIONED|
                                exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  empty-tuple-source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                  -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
              exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
              -- RANDOM_PARTITION_EXCHANGE  |PARTITIONED|
                project ([$$354]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                -- STREAM_PROJECT  |PARTITIONED|
                  assign [$$354] <- [{"two": $$186}] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                  -- ASSIGN  |PARTITIONED|
                    limit 4 [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                    -- STREAM_LIMIT  |PARTITIONED|
                      project ([$$186]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                      -- STREAM_PROJECT  |PARTITIONED|
                        assign [$$186] <- [$$onek2.getField(2)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                        -- ASSIGN  |PARTITIONED|
                          project ([$$onek2]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                          -- STREAM_PROJECT  |PARTITIONED|
                            exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              data-scan []<-[$$190, $$onek2] <- test.onek2 condition (and(ge($$onek2.getField(2), 1), le($$onek2.getField(2), 10000))) limit 4 [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                              -- DATASOURCE_SCAN  |PARTITIONED|
                                exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  empty-tuple-source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                  -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
